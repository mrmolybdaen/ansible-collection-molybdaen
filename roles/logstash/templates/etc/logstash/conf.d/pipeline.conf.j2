input {
  http {
    port               => {{ pipeline.input.port | default(8080) }}
    add_field          => { "[@metadata][input-http]" => "" }
{% if pipeline.input.username is defined and pipeline.input.username | length and pipeline.input.password is defined and pipeline.input.password | length %}
    user               => "{{ pipeline.input.username }}"
    password           => "{{ pipeline.input.password }}"
{% endif %}
{% if pipeline.input.ssl is defined %}
    ssl                => true
    ssl_certificate    => "{{ pipeline.input.ssl.certificate }}"
    ssl_key            => "{{ pipeline.input.ssl.key }}"
{% if pipeline.input.ssl.passphrase is defined and pipeline.input.ssl.passphrase | length %}
    ssl_key_passphrase => "{{ pipeline.input.ssl.passphrase }}"
{% endif %}
{% endif %}
  }
}

filter {
  if [@metadata][input-http] {
    date {
      match => [ "date", "UNIX" ]
      remove_field => [ "date" ]
    }
    mutate {
      remove_field => ["headers","host"]
    }
  }
}

output {
  {{ pipeline.output.type }} {
    hosts     => [{% for host in pipeline.output.hosts %}"{{ host }}"{{ ", " if not loop.last }}{% endfor %}]
    auth_type => {
      type     => "{{ pipeline.output.authentication.type }}"
      user     => "{{ pipeline.output.authentication.username }}"
      password => "{{ pipeline.output.authentication.password }}"
    }
    ssl_certificate_verification => {{ pipeline.output.certificate_verification | default("true") }}
    if "metric" in [tags] {
        index => "{{ pipeline.output.index_metrics | default('logstash-metrics-%{+YYYY.MM.dd}') }}"
    }
    else {
        index => "{{ pipeline.output.index_logs | default('logstash-logs-%{+YYYY.MM.dd}') }}"
    }
    action => "create"
  }
}
