#/etc/sysctl.d/10-networking.conf

###################################################################
# Functions previously found in netbase
#

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
net.ipv4.conf.default.rp_filter=2
net.ipv4.conf.all.rp_filter=2

# Uncomment the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_synack_retries=5

# Uncomment the next line to enable packet forwarding for IPv4; 0 = disable
net.ipv4.ip_forward = {{ system_sysctl.networking.ipv4.ip_forward | default(0) }}
net.ipv4.ip_nonlocal_bind = {{ system_sysctl.networking.ipv4.ip_nonlocal_bind | default(0) }}
net.ipv6.ip_nonlocal_bind = {{ system_sysctl.networking.ipv6.ip_nonlocal_bind | default(0) }}

# Uncomment the next line to enable packet forwarding for IPv6
#  Enabling this option disables Stateless Address Autoconfiguration
#  based on Router Advertisements for this host
# 0 = disabled
net.ipv6.conf.all.forwarding = {{ system_sysctl.networking.ipv6.conf.all.forwarding | default(0) }}

###################################################################
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection. Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
# Do send ICMP redirects (1) or not (0) - defines if we are a router.
net.ipv4.conf.all.send_redirects = {{ system_sysctl.networking.ipv4.conf.all.send_redirects | default(0) }}
net.ipv4.conf.default.send_redirects = {{ system_sysctl.networking.ipv4.conf.default.send_redirects | default(0) }}
#
# Do accept IP source route packets (1) or not (0) - defines if we are a router.
net.ipv4.conf.all.accept_source_route = {{ system_sysctl.networking.ipv4.conf.all.accept_source_route | default(0) }}
net.ipv6.conf.all.accept_source_route = {{ system_sysctl.netwirking.ipv6.conf.all.accept_source_route | default(-1) }}

# Log Martian Packets
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# Lo  to kernel log
net.ipv4.conf.default.accept_source_route = {{ system_sysctl.networking.ipv4.conf.default.accept_source_route | default(0) }}
net.ipv6.conf.default.accept_source_route = {{ system_sysctl.networking.ipv6.conf.default.accept_source_route | default(0) }}
net.ipv4.conf.default.accept_redirects = {{ system_sysctl.networking.ipv4.conf.default.accept_redirects | default(0) }}
net.ipv6.conf.default.accept_redirects = {{ system_sysctl.networking.ipv6.conf.default.accept_redirects | default(0) }}

# ignore bad icmp errors
net.ipv4.icmp_ignore_bogus_error_responses=1

# Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts = 1

########## IPv6 networking start ##############
# Number of Router Solicitations to send until assuming no routers are present.
# This is host and not router
net.ipv6.conf.default.router_solicitations = 0

# Accept Router Preference in RA?
net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0

# Learn Prefix Information in Router Advertisement
net.ipv6.conf.default.accept_ra = 0
net.ipv6.conf.default.accept_ra_pinfo = 0

# Setting controls whether the system will accept Hop Limit settings from a router advertisement
net.ipv6.conf.default.accept_ra_defrtr = 0

# Router advertisements can cause the system to assign a global unicast address to an interface
net.ipv6.conf.default.autoconf = 0

#how many neighbor solicitations to send out per address?
net.ipv6.conf.default.dad_transmits = 0

# How many global unicast IPv6 addresses can be assigned to each interface?
net.ipv6.conf.default.max_addresses = 1
########## IPv6 networking ends ##############

# TCP and memory optimization
# increase TCP max buffer size setable using setsockopt()
net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_wmem = 4096 87380 8388608

# increase Linux auto-tuning TCP buffer limits
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.core.netdev_max_backlog = 5000
net.ipv4.tcp_window_scaling = 1

#Increase system IP port limits
net.ipv4.ip_local_port_range = 2000 65000

# RFC 1337 fix
net.ipv4.tcp_rfc1337 = {{ system_sysctl.networking.ipv4.tcp_rfc1337 | default(1) }}

# This enables hardening for the BPF JIT compiler.
# Enabling hardening trades off performance, but
# can mitigate JIT spraying.
# Possible values:
#   0 - disable JIT hardening (kernel default)
#   1 - enable JIT hardening for unprivileged users only
#   2 - enable JIT hardening for all users
net.core.bpf_jit_harden = {{ system_sysctl.networking.core.bpf_jit_harden | default(2) }}

net.ipv4.tcp_tw_reuse = 1

# IPv6 Privacy
# Possible values:
#   0 - do not use privacy extensions.
#   1 - generate privacy addresses
#   2 - prefere privacy addresses and use tem over the normal ones.
{# By default, we use 0, because servers usually provide publicly accessible services #}
net.ipv6.conf.all.use_tmpaddr = {{ system_sysctl.networking.ipv6.conf.all.use_tmpaddr | default(0) }}
net.ipv6.conf.default.use_tmpaddr = {{ system_sysctl.networking.ipv6.conf.default.use_tmpaddr | default(0) }}

# Network interface configuration
{% for interface in system_sysctl.networking.interfaces %}
net.ipv6.conf.{{ interface.name }}.disable_ipv6 = {{ interface.disable_ipv6 | default(0) }}
{% endfor %}