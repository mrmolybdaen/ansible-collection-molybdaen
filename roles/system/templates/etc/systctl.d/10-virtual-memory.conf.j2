#/etc/sysctl.d/10-virtual-memory.conf

# Kernel tweaks for sysctl.conf ##
#
# The following help mitigate out of bounds, null pointer dereference, heap and
# buffer overflow bugs, use-after-free etc from being exploited. It does not 100%
# fix the issues, but seriously hampers exploitation.
#
# Default is 65536, 4096 helps mitigate memory issues used in exploitation
vm.mmap_min_addr=4096

# Prevent common use-after-free exploits
vm.unprivileged_userfaultfd=0

# Increase the number of virtual memory areas that one process may request
vm.max_map_count=1048576

# Control swapping behavior.
vm.swappiness = {{ system_sysctl.vm.swappiness | default(10) }}

# Linux kernel overcommits memory by default, because of applications
# usually are malloc()ing more memory than they actually need.

# The following parameter enables or disables overcommitment:
#   0 - the kernel attempts to estimate the amount of free memory left when userspace requests more memory.
#   1 - the kernel pretends there is always enough memory until it actually runs out.
#   2 - the kernel uses a “never overcommit” policy that attempts to prevent any overcommit of memory.
vm.overcommit_memory = {{ system_sysctl.vm.overcommit_memory | default(0) }}

{% if system_sysctl.vm.overcommit_kbytes is defined and (systemctl_sysctl.vm.overcommit_memory is defined and system_sysctl.vm.overcommit_memory == 2) %}
# When overcommit_memory is set to 2, the committed address space
# is not permitted to exceed swap plus this amount of physical RAM.
vm.overcommit_kbytes = {{ system_sysctl.vm.overcommit_kbytes }}
{% endif %}

{% if system_sysctl.vm.overcommit_ratio is defined and (systemctl_sysctl.vm.overcommit_memory is defined and system_sysctl.vm.overcommit_memory == 2) %}
# When overcommit_memory is set to 2, the committed address space
# is not permitted to exceed swap plus this percentage of physical RAM.
vm.overcommit_ratio = {{ system_sysctl.vm.overcommit_ratio }}
{% endif %}
