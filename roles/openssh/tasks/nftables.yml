---

# Copyright: (c) 2025, Christian Siegel <molybdaen@mr42.org>
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: "nftables | Check if fallback file exists ..."
  ansible.builtin.stat:
    path: "/etc/nftables.d/99-sshd-fallback-ipv4.app"
  register: openssh_fallback_exists_ipv4
  tags:
    - sshd
    - sshd-nftables
    - nftables

- name: "nftables | Check if fallback file exists ..."
  ansible.builtin.stat:
    path: "/etc/nftables.d/99-sshd-fallback-ipv6.app"
  register: openssh_fallback_exists_ipv6
  tags:
    - sshd
    - sshd-nftables
    - nftables

- name: "nftables | Cleanup sshd fallback file ..."
  when: openssh_fallback_exists_ipv4.stat.exists or openssh_fallback_exists_ipv6.stat.exists
  tags:
    - sshd
    - sshd-nftables
    - nftables
  block:
    - name: "nftables | Get IP address of current session"
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          who -m --ips | grep {{ ansible_user }} | awk '{ print $5}'
      args:
        executable: /bin/bash
      register: nftables_deployment_source
      changed_when: nftables_deployment_source.rc == 0
      become: false

    - name: "nftables | Set cleanup variable for IPv4"
      when: item | ansible.utils.network_in_network( nftables_deployment_source.stdout )
      ansible.builtin.set_fact:
        openssh_nftables_cleanup_ipv4: true
      loop: "{{ openssh_whitelist_ipv4 }}"

    - name: "nftables | IPv4 cleanup message success ..."
      when: openssh_nftables_cleanup_ipv4 is defined and openssh_nftables_cleanup_ipv4
      ansible.builtin.debug:
        msg: "Fallback file can be cleaned up."

    - name: "nftables | IPv4 cleanup message fail ..."
      when: openssh_nftables_cleanup_ipv4 is not defined
      ansible.builtin.debug:
        msg: "WARNING: Fallback file cannot be removed."

    - name: "nftables | Set cleanup variable for IPv4"
      when: item | ansible.utils.network_in_network( nftables_deployment_source.stdout )
      ansible.builtin.set_fact:
        openssh_nftables_cleanup_ipv6: true
      loop: "{{ openssh_whitelist_ipv6 }}"

    - name: "nftables | IPv6 cleanup message success ..."
      when: openssh_nftables_cleanup_ipv6 is defined and openssh_nftables_cleanup_ipv6
      ansible.builtin.debug:
        msg: "IPv6 fallback file can be cleaned up."

    - name: "nftables | IPv4 cleanup message fail ..."
      when: openssh_nftables_cleanup_ipv6 is not defined
      ansible.builtin.debug:
        msg: "WARNING: IPv6 fallback file cannot be removed."

    - name: "nftables | Cleanup IPv4 ..."
      when: openssh_nftables_cleanup_ipv4 is defined and openssh_nftables_cleanup_ipv4
      ansible.builtin.file:
        path: "/etc/nftables.d/99-sshd-fallback-ipv4.app"
        state: absent
      become: true

    - name: "nftables | Cleanup IPv6 ..."
      when: openssh_nftables_cleanup_ipv6 is defined and openssh_nftables_cleanup_ipv6
      ansible.builtin.file:
        path: "/etc/nftables.d/99-sshd-fallback-ipv6.app"
        state: absent
      become: true

- name: "nftables | Add SSH rule"
  ansible.builtin.template:
    src: "etc/nftables.d/99-sshd-ipv4.app.j2"
    dest: "/etc/nftables.d/99-sshd-ipv4.app"
    mode: "0640"
    owner: root
    group: root
    backup: true
  register: openssh_nftables_config_ipv4
  become: true
  tags:
    - sshd
    - sshd-nftables

- name: "nftables | Add SSH rule"
  ansible.builtin.template:
    src: "etc/nftables.d/99-sshd-ipv6.app.j2"
    dest: "/etc/nftables.d/99-sshd-ipv6.app"
    mode: "0640"
    owner: root
    group: root
    backup: true
  register: openssh_nftables_config_ipv6
  become: true
  tags:
    - sshd
    - sshd-nftables

- name: "nftables | Add whitelists ..."
  ansible.builtin.template:
    src: etc/nftables.d/97-sshd.set.j2
    dest: /etc/nftables.d/97-sshd.set
    owner: root
    group: root
    mode: "0644"
  register: openssh_nftables_config_sets
  become: true
  tags:
    - sshd
    - sshd-nftables

- name: "nftables | Check configuration, rollback on error ..."
  tags:
    - sshd
    - sshd-nftables
  block:
    - name: "nftables | Check configuration ..."
      ansible.builtin.command: /usr/sbin/nft -c -f /etc/nftables.conf
      register: nftables_check_cfg
      changed_when: nftables_check_cfg.rc == 0
      become: true

  rescue:
    - name: "nftables | Do a configuration rollback ..."
      when: openssh_nftables_config.backup_file is defined
      ansible.builtin.copy:
        remote_src: true
        src: "{{ openssh_nftables_config.backup_file }}"
        dest: "{{ openssh_nftables_config.dest }}"
        mode: "0640"
        owner: root
        group: root
      become: true

- name: "nftables | Restart nftables ..."
  ansible.builtin.systemd_service:
    state: restarted
    name: nftables.service
  become: true
  tags:
    - sshd
    - sshd-nftables
